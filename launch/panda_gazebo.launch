<launch>

    <!-- roslaunch arguments -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="recording" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>

    <!-- This argument dictates whether gazebo should be launched in this file -->
    <arg name="load_gazebo" default="true"/>
    <!-- This argument dictates if the tool will be loaded -->
    <arg name="load_tool" default="true"/>

    <!-- We resume the logic in empty_world.launch, changing the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">

        <arg name="world_name" value="$(find aescape_panda_simulator)/worlds/panda.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="recording" value="$(arg recording)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>

    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find aescape_panda_simulator)/urdf/panda_arm.urdf.xacro' load_gazebo:=$(arg load_gazebo) load_tool:=$(arg load_tool)"/> 

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" 
        pkg="gazebo_ros" 
        type="spawn_model" 
        respawn="false" 
        output="screen"
        args="-urdf -model panda -param robot_description"/>

</launch>